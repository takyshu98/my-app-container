AWSTemplateFormatVersion: "2010-09-09"
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: poc--trial--ecs--cluster
  ECSServiceName:
    Type: String
    Default: poc--trial--svc
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-0c52bfc8fc4b085bb,sg-07d7daf7e0140f5b4
  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-0737d01e09dbe0cc1,subnet-0aa5388605a552977
  VpcID:
    Type: String
    Default: vpc-05f3f6c4ad2cf4972
  LoadBalancerName:
    Type: String
    Default: poc--trial--alb
  ApplicationName:
    Type: String
    Default: AppECS-poc--trial--ecs--cluster-poc--trial--svc
  DeploymentGroupName:
    Type: String
    Default: DgpECS-poc--trial--ecs--cluster-poc--trial--svc
Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: poc--trial--ecs--cluster
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: arn:aws:ecs:ap-northeast-1:032465545722:task-definition/poc--trial--etd:7
      ServiceName: poc--trial--svc
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      AvailabilityZoneRebalancing: ENABLED
      LoadBalancers:
        - ContainerName: poc--trial--container
          ContainerPort: 3000
          LoadBalancerName: !Ref AWS::NoValue
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroupIDs
          Subnets: !Ref SubnetIDs
      PlatformVersion: LATEST
      DeploymentController:
        Type: CODE_DEPLOY
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
    DependsOn:
      - Listener
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      Name: tg-poc--t-poc--trial--svc-1
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId: vpc-05f3f6c4ad2cf4972
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "300"
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: arn:aws:elasticloadbalancing:ap-northeast-1:032465545722:loadbalancer/app/poc--trial--alb/30c7eb9b01917ed9
      Port: 80
      Protocol: HTTP
  TargetGroupTwo:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      Name: tg-poc--t-poc--trial--svc-2
      Port: 80
      Protocol: HTTP
      TargetType: ip
      HealthCheckProtocol: HTTP
      VpcId: vpc-05f3f6c4ad2cf4972
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "300"
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref ApplicationName
      DeploymentGroupName: !Ref DeploymentGroupName
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
          - DEPLOYMENT_STOP_ON_REQUEST
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 60
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      LoadBalancerInfo:
        TargetGroupPairInfoList:
          - ProdTrafficRoute:
              ListenerArns:
                - !GetAtt Listener.ListenerArn
            TargetGroups:
              - Name: !GetAtt TargetGroup.TargetGroupName
              - Name: !GetAtt TargetGroupTwo.TargetGroupName
      ServiceRoleArn: arn:aws:iam::032465545722:role/CodeDeployRoleforECS
      ECSServices:
        - ClusterName: !Ref ECSClusterName
          ServiceName: !Ref ECSServiceName
      Tags: []
    DependsOn:
      - CodeDeployApplication
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      ComputePlatform: ECS
      Tags: []
    DependsOn:
      - ECSService
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value: !Ref ECSClusterName
  ECSService:
    Description: The created service.
    Value: !Ref ECSService
  Listener:
    Description: The created listener.
    Value: !Ref Listener
  TargetGroup:
    Description: The created target group.
    Value: !Ref TargetGroup
  CodeDeployDeploymentGroup:
    Description: The created CodeDeploy deployment group.
    Value: !Ref CodeDeployDeploymentGroup
  CodeDeployApplication:
    Description: The created CodeDeploy application.
    Value: !Ref CodeDeployApplication
  TargetGroupTwo:
    Description: The created target group 2.
    Value: !Ref TargetGroupTwo
